package ConvertApp;


/**
* ConvertApp/ConvertPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from convert.idl
* samedi 18 décembre 2021 07 h 00 WAT
*/

public abstract class ConvertPOA extends org.omg.PortableServer.Servant
 implements ConvertApp.ConvertOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("decimalToBinary", new java.lang.Integer (0));
    _methods.put ("decimalToOctal", new java.lang.Integer (1));
    _methods.put ("decimalToHexadecimal", new java.lang.Integer (2));
    _methods.put ("BinaryToDecimal", new java.lang.Integer (3));
    _methods.put ("binaryToOctal", new java.lang.Integer (4));
    _methods.put ("binaryToHexadecimal", new java.lang.Integer (5));
    _methods.put ("octalToBinary", new java.lang.Integer (6));
    _methods.put ("octalToDecimal", new java.lang.Integer (7));
    _methods.put ("octalToHexaDecimal", new java.lang.Integer (8));
    _methods.put ("hexadecimalToBinary", new java.lang.Integer (9));
    _methods.put ("hexadecimalToOctal", new java.lang.Integer (10));
    _methods.put ("hexadecimalToDecimal", new java.lang.Integer (11));
    _methods.put ("shutdown", new java.lang.Integer (12));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // ConvertApp/Convert/decimalToBinary
       {
         int decimal = in.read_long ();
         String $result = null;
         $result = this.decimalToBinary (decimal);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // ConvertApp/Convert/decimalToOctal
       {
         int decimal = in.read_long ();
         String $result = null;
         $result = this.decimalToOctal (decimal);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // ConvertApp/Convert/decimalToHexadecimal
       {
         int decimal = in.read_long ();
         String $result = null;
         $result = this.decimalToHexadecimal (decimal);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // ConvertApp/Convert/BinaryToDecimal
       {
         String binary = in.read_string ();
         String $result = null;
         $result = this.BinaryToDecimal (binary);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // ConvertApp/Convert/binaryToOctal
       {
         String binary = in.read_string ();
         String $result = null;
         $result = this.binaryToOctal (binary);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // ConvertApp/Convert/binaryToHexadecimal
       {
         String binary = in.read_string ();
         String $result = null;
         $result = this.binaryToHexadecimal (binary);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 6:  // ConvertApp/Convert/octalToBinary
       {
         int octal = in.read_long ();
         String $result = null;
         $result = this.octalToBinary (octal);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 7:  // ConvertApp/Convert/octalToDecimal
       {
         int octal = in.read_long ();
         String $result = null;
         $result = this.octalToDecimal (octal);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 8:  // ConvertApp/Convert/octalToHexaDecimal
       {
         int octal = in.read_long ();
         String $result = null;
         $result = this.octalToHexaDecimal (octal);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 9:  // ConvertApp/Convert/hexadecimalToBinary
       {
         String hexadecimal = in.read_string ();
         String $result = null;
         $result = this.hexadecimalToBinary (hexadecimal);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 10:  // ConvertApp/Convert/hexadecimalToOctal
       {
         String hexadecimal = in.read_string ();
         String $result = null;
         $result = this.hexadecimalToOctal (hexadecimal);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 11:  // ConvertApp/Convert/hexadecimalToDecimal
       {
         String hexadecimal = in.read_string ();
         String $result = null;
         $result = this.hexadecimalToDecimal (hexadecimal);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 12:  // ConvertApp/Convert/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ConvertApp/Convert:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Convert _this() 
  {
    return ConvertHelper.narrow(
    super._this_object());
  }

  public Convert _this(org.omg.CORBA.ORB orb) 
  {
    return ConvertHelper.narrow(
    super._this_object(orb));
  }


} // class ConvertPOA
